module cla_logic (
  input g [3:0],
  input p [3:0],
  input cin,
  output cout,
  output [3:0] sum 
);
  
  wire c1,c2,c3,c4;
  
  assign c1 = g[0] | (p[0] & cin);  // Calculate each carry bit without waiting for propogation
  assign c2 = g[1] | (p[1] & c1);
  assign c3 = g[2] | (p[2] & c2);
  assign c4 = g[3] | (p[3] & c3);
  
  assign sum[0] = p[0] ^ cin;       // sum = pi^ci always
  assign sum[1] = p[1] ^ c1;
  assign sum[2] = p[2] ^ c2;
  assign sum[3] = p[2] ^ c3;
    
  assign cout = c4;                 // carry flag
  
endmodule
